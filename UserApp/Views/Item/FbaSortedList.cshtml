@model Infrastrucutre.Core.Models.FbaRequest

@{
    ViewBag.Title = "Fba Sorted List";
    Layout = "~/Views/shared/_LoggedInLayout.cshtml";
}

@using AkraTechFramework.Helpers

<h2>FBA Sorted List</h2>

<div class="modal fade" id="SubmitShipmentProcesing">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Submit Shipment</h4>
            </div>
            <div class="modal-body" style="margin-left:7%;">
                <h4 style="text-align: center;">Are you sure, You want to Submit?</h4>
            </div>
            <div class="modal-footer">
                <a href="#" class="btn btn-primary" data-dismiss="modal" id="r">Cancle</a>
                <a href="#" class="btn btn-danger" id="confirmButton" onclick="ConfirmSubmit()" style="margin-right:32%">Confirm</a>
            </div>
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="span3 control-group">
        <div class="row-fluid">
            <div class="span12 control-group">
                <label class="control-label">Seller List</label>

                @if (ViewBag.SellerID != null)
                {
                    //@Html.DropDownListFor(model => model.SellerIndex, ViewBag.SellerID as SelectList, "--Select Seller--", new { @class = "control-label chosen" })
                    <select class="control-label chosen" Style="width:100%" data-val="true" required="required" data-val-required="Item is required" id="SellerIndex" name="SellerIndex">

                        @foreach (var item in (ViewBag.SellerID as System.Web.Mvc.SelectList).Items as List
                        <Infrastrucutre.Core.Models.SellerAccount>
                            )
                        {
                            <option value="@item.SellerIndex ">@item.SellerID</option>
                        }
                    </select>
                }
            </div>
            <div class="span12 control-group" style="margin-left:0%;">
                <label class="control-label">FBA Root</label>

                @if (ViewBag.FBARoot != null)
                {
                    <select class="control-label chosen" data-val="true" style="width:100%;" required="required" data-val-required="Item is required" id="FBARootID" name="FBARootID">
                        @foreach (var item in (ViewBag.FBARoot as System.Web.Mvc.SelectList).Items as List
                        <Infrastrucutre.Core.Models.FBALocations>)
                        {
                            <option value="@item.FBARootID">@item.FBARoot</option>
                        }
                    </select>
                }
            </div>
            <div class="span12 control-group" style="margin-left:0%;">
                <button type="submit" id="LoadRecordsButton" class="btn" style="margin-bottom: 10px;margin-left: 0%; width:100%;" onclick="FindOrders()">Load Request</button>
            </div>
        </div>
    </div>
    <div class="span4 control-group">
        <div class="row-fluid">
            <div class="span12 control-group">
                @Html.Label("lblShipment", "Shipment Method", new { @class = "control -label" })

                <select id="ShipmentMethod" name="ShipmentMethod" style="width:100%;border-radius:4px">
                    <option value="BOXES">BOXES</option>
                    <option value="PALLETS">PALLETS</option>
                    <option value="CONTAINER">CONTAINER</option>

                </select>
            </div>
            <div class="span12 control-group" style="margin-left:0%;">
                <div class="row-fluid">
                    <div class="span6 control-group" style="margin-left:0%;">
                        @Html.Label("lblShipmentID", "Shipment ID", new { @class = "control -label" })
                        @Html.TextBox("ShipmentID", "", new { @class = "span12", @style = "border-radius:4px;width:95%;" })
                    </div>
                    <div class="span6 control-group" style="margin-left:0%;">
                        @Html.Label("lblDestination", "Destination", new { @class = "control -label" })

                        <input list="DestinationDataList" id="Destination" style="border: 1px solid #cccccc;border-radius:4px;width:102%;height:26px;">
                        <datalist id="DestinationDataList" name="Destination">
                            <option value="UK">UK</option>
                            <option value="FRANCE">FRANCE</option>
                            <option value="ITALY">ITALY</option>
                            <option value="GERMAN">GERMAN</option>
                            <option value="USA">USA</option>
                        </datalist>
                    </div>
                </div>
            </div>
            <div class="span12 control-group" style="margin-left:0%;">
                <button type="submit" id="LoadRecords" class="btn" style="margin-bottom: 10px;margin-left: 0%; width:100%;margin-top:-2.5%;" onclick="AddShipmentDetails()">Submit</button>
            </div>
        </div>
    </div>
</div>


<div id="tblItems" style="width:100%"></div>

<script>

    function AddShipmentDetails() {
        $("#SubmitShipmentProcesing").modal("show");
    }

    function ConfirmSubmit() {

        $("#SubmitShipmentProcesing").modal("hide");

        var shipmentID = $('#ShipmentID').val();
        var destination = $('#Destination').val();

        var $selectedRows = $('#tblItems').jtable('selectedRows');
        var selectedItems = new Array();
        var selectedItemsFNSKU = new Array();
        var selectedItemsItemMasterID = new Array();
        var selectedItemsFBARootID = new Array();
        var SendFinalQty = new Array();
        var FBoxQty = new Array();

        if (shipmentID=="")
        {
            alert('Please make sure, ShipmentID & Destination are not blank!!');
        }
        else if (destination == "")
        {
            alert('Please make sure, ShipmentID & Destination are not blank!!');
        }
        else
        {
            if ($selectedRows.length > 0)
            {

                $('#selectedvalues').text();

                $selectedRows.each(function (row, tr) {
                    var record = $(this).data('record');
                    selectedItems.push(record.FBARequestID);
                    selectedItemsFNSKU.push(record.FNSKU);
                    selectedItemsItemMasterID.push(record.ItemMasterID);
                    selectedItemsFBARootID.push(record.FBARootID);

                    SendFinalQty.push(record.FinalQty = ($(tr).find("#TxtFinalQty").val()))//get the value
                    FBoxQty.push(record.FBABoxQty = ($(tr).find("#TxtFBABoxQty").val()))//get the value
                    //alert(SendFinalQty, FBoxQty);
                });

                //debugger
                $.ajax({
                    url: '@Url.Action("AddShipment")',
                    type: 'POST',
                    success: function () {
                        $('#divLoading').hide();
                        $('#tblItems').jtable('load');
                        alert('Shipment Completed Successfully');
                        
                    },
                    traditional: true,
                    data: {
                        'ShipmentID': $('#ShipmentID').val(),
                        'ShipmentMethod': $('#ShipmentMethod').val(),
                        'Destination': $('#Destination').val(),
                        'FinalQty': SendFinalQty,
                        'FBABoxQty': FBoxQty,
                        'OrderIDs': selectedItems,  // <-- the $ sign in the parameter name seems unusual, I would avoid it
                        'FNSKUs': selectedItemsFNSKU,
                        'ItemMasterIDs': selectedItemsItemMasterID,
                        'FBARootIDs': selectedItemsFBARootID
                    },
                    error: function (xhr, status, error) {
                        $("#divLoading").hide()
                        //$('#modalAdd').modal('hide');
                        alert('Unexpected error - Please contact administrator');
                    }

                });
                clearForm();
            }
            else {
                alert('You have to select atlist 1 row from the list!!');
            }
        }
    }

    function clearForm() {
        $('#ShipmentID').val('')
        $('#ShipmentMethod').val('')
        $('#Destination').val('')
        $('#FBARootID').val('');
        $('#SellerIndex').val('');

    }

    $(document).ready(pageLoad);

    function pageLoad() {
        loadItems();
        FindOrders();
    }

    function FindOrders() {
        $('#tblItems').jtable('load', { SellerIndex: $('#SellerIndex').val(), FBARootID: $('#FBARootID').val() });
    }

    function loadItems() {
        $('#tblItems').jtable({
            title: 'FBA SORTED LIST',
            useBootstrap: true,
            paging: true,
            sorting: true,
            selecting: true,
            multiselect: true,
            selectingCheckboxes: true,
            actions: {
                listAction:'@Url.Action("GetFbaSortedList")' + '?SellerIndex=' + $('#SellerIndex').val() + '&FBARootID=' + $('#FBARootID').val()  //Get FBA Pending Request Report Procedure

            },
            fields: {
                FBARequestID: {
                    key: true,
                    list: false
                },
                FBARootID: {
                    key: true,
                    list: false
                },
                ItemMasterID: {
                    key: true,
                    list: false
                },
                ItemName: {
                    title: 'Item Name',
                    width: '3%'
                },
                ItemCode: {
                    title: 'Item Code',
                    width: '3%'
                },
                FNSKU: {
                    title: 'FNSKU',
                    width: '3%'

                },
                CartonQty: {
                    title: 'BoxWeight',
                    width: '3%'
                },
                Dimension1: {
                    title: 'Dimension',
                    width: '3%'
                },
                MasterCartonQty: {
                    title: 'Qty/Box',
                    width: '3%'
                },
                RequestQty: {
                    title: 'Final/Qty',
                    display: function (data) {
                        return String.format('<input type="text" class="jtable - input" style="width:80%;" name="TxtFinalQty" id="TxtFinalQty" value="{0}"/>', data.record.RequestQty);
                        /*return '<input type="text" class="jtable-input" style="width:50%" name="TxtFinalQty" id="TxtFinalQty" value="0"/>';*/
                    },
                    width: '1%'
                },
                FBABoxQty: {
                    title: 'FBABox Qty',
                    display: function (data) {
                        return String.format('<input type="text" class="jtable - input" style="width:60%;" name="TxtFBABoxQty" id="TxtFBABoxQty" value="{0}"/>', data.record.FBABoxQty);
                        /*return '<input type="text" class="jtable-input" style="width:50%" name="TxtFBABoxQty" id="TxtFBABoxQty" value="0"/>';*/
                    },
                    width: '1%'
                },
                RDate: {
                    title: 'Rq/Date',
                    width: '3%',
                    displayFormat: 'dd-mm-yyyy'
                },

                FBASendingDate: {
                    title: 'SendingDate',
                    width: '3%',
                    displayFormat: 'dd-mm-yyyy'
                },
                Comments: {
                    title: 'Comments',
                    width: '4%'
                },
                UserName: {
                    title: 'Requested By',
                    width: '3%'
                },
                REMOVE: {
                    display: function (data) {
                        return String.format("<a class='btn btn-success btn-mini' onclick=\"UpdateProcesing({0})\">REMOVE</a>", data.record.FBARequestID);
                    },
                    width: '2%'
                }
            }
        });
        $('#tblItems').jtable('load');
    }

    function UpdateProcesing(FBARequestID) {
        //debugger
        $.ajax({
                url: '@Url.Action("RejectFbaProcesingByID/")' + FBARequestID,
            type: 'POST',
            success: function (result) {
                if (result.Result=="OK")
                {
                    alert('Data remove successfully!!');
                    $('#tblItems').jtable('load', { SellerIndex: $('#SellerIndex').val(), FBARootID: $('#FBARootID').val() });
                }
                else
                {
                    alert('Something went wrong!!');
                    $('#tblItems').jtable('load', { SellerIndex: $('#SellerIndex').val(), FBARootID: $('#FBARootID').val() });
                }
            }
        });

    }


</script>
