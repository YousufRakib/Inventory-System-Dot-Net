@model Infrastrucutre.Core.Models.FbaRequest
@{
    ViewBag.Title = "FBA Processing Form";
    Layout = "~/Views/shared/_LoggedInLayout.cshtml";
}

@using AkraTechFramework.Helpers

    <h2>FBA Processing</h2>

    <div class="modal fade" id="UpdateRejectProcesing">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4>Reject FDB-Request</h4>
                    @*<a href="#" class="close" data-dismiss="modal">&times;</a>*@
                </div>
                <div class="modal-body" style="margin-left:7%;">
                    <input type="hidden" id="FBARequestID"   />
                    <h4 style="text-align: center;">Do you want to reject this?</h4>
                    <div>
                        <h5 style="font-weight: bold; text-align: center;">If Yes, Please write the reason..</h5>
                    </div>
                    <input type="text" style="margin-left: 27%;" id="reason" />
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-primary" data-dismiss="modal" id="r">Cancle</a>
                    <a href="#" class="btn btn-danger" id="confirmButton" onclick="ConfirmReject()" style="margin-right:32%">Confirm</a>
                </div>
            </div>
        </div>
    </div>

    @*<div id="dialog-confirm" title="Are you sure want to delete?"></div>*@

    <div class="row-fluid">
        <div class="span4 control-group">
            <div class="row-fluid">
                <div class="span12 control-group">
                    <label class="control-label">Seller List</label>
                    @if (ViewBag.SellerID != null)
                    {
                        //@Html.DropDownListFor(model => model.SellerIndex, ViewBag.SellerID as SelectList, "--Select Seller--", new { @class = "control-label chosen" })
                        <select class="control-label chosen" Style="width:300px" data-val="true" required="required" data-val-required="Item is required" id="SellerIndex" name="SellerIndex">

                            @foreach (var item in (ViewBag.SellerID as System.Web.Mvc.SelectList).Items as List
                            <Infrastrucutre.Core.Models.SellerAccount>
                                )
                            {
                                <option value="@item.SellerIndex ">@item.SellerID</option>
                            }
                        </select>
                    }
                </div>

                <div class="span12 control-group" style="margin-left: 0px;">
                    <label class="control-label">FBA Root</label>
                    @if (ViewBag.FBARoot != null)
                    {
                        //@Html.DropDownListFor(model => model.SellerIndex, ViewBag.SellerID as SelectList, "--Select Seller--", new { @class = "control-label chosen" })
                        <select class="control-label chosen" data-val="true" Style="width:300px;margin-left:0px;" required="required" data-val-required="Item is required" id="FBARootID" name="FBARootID">

                            @foreach (var item in (ViewBag.FBARoot as System.Web.Mvc.SelectList).Items as List
                            <Infrastrucutre.Core.Models.FBALocations>)
                            {
                                <option value="@item.FBARootID">@item.FBARoot</option>
                            }
                        </select>
                    }
                </div>

                <div class="span12 control-group" style="margin-left: 0px;">
                    <button type="submit" id="LoadRecordsButton" class="btn" style="margin-bottom: 10px;margin-left: 0px;margin-top:0px;" onclick="FindOrders()">Load Request</button>
                </div>
            </div>
        </div>

        <div class="span8 control-group" style="margin-left: 0px;">
            <div id="tblItemsSummary" style="width:104%;"></div>
        </div>
    </div>

    <div id="tblItems" style="width:auto"></div>

    <script>

    $(document).ready(pageLoad);

        function pageLoad()
        {
            loadItemsSummary();
            /*FindOrdersSummary();*/

            loadItems();
            FindOrders();

           
        }

        function FindOrders() {
            $('#tblItems').jtable('load', { SellerIndex: $('#SellerIndex').val(), FBARootID: $('#FBARootID').val() });
            $('#tblItemsSummary').jtable('load', { SellerIndex: $('#SellerIndex').val(), FBARootID: $('#FBARootID').val() });
        }

        function loadItems()
        {
            $('#tblItems').jtable({
                title: 'FBA Process',
                useBootstrap: true,
                paging: true,
                sorting: true,
                actions: {
                    listAction:'@Url.Action("GetFbaPendingRequest")'// + '?SellerIndex=' + $('#SellerIndex').val() + '&FBARootID=' + $('#FBARootID').val(),  //Get FBA Pending Request Report Procedure

                },
                fields: {
                    FBARequestID: {
                        key: true,
                        list: false
                    },
                    ItemName: {
                        title: 'Item Name',
                        width: '7.40909%'
                    },
                    ItemCode: {
                        title: 'Item Code',
                        width: '3%'
                    },
                    UserName: {
                        title: 'User',
                        width: '3%'
                    },
                    SellerID: {
                        title: 'Seller',
                        width: '3%'
                    },
                    ListingItemNo: {
                        title: 'Asin',
                        width: '3%'
                    },
                    FNSKU: {
                        title: 'FNSKU',
                        width: '3%'
                    },
                    CartonQty: {
                        title: 'BoxWeight',
                        width: '3%'
                    },
                    Dimension1: {
                        title: 'Box-Dim',
                        width: '3%'
                    },
                    MasterCartonQty: {
                        title: 'Qty/Box',
                        width: '3%'
                    },
                    UKSold30Days: {
                        title: 'Sold/Month',
                        width: '3%'
                    },
                    FBARoot: {
                        title: 'FBA Root',
                        width: '3%'
                    },
                    UKWarehouse: {
                        title: 'WH/Stock',
                        width: '3%'
                    },
                    UKFbaStock: {
                        title: 'FBA/Stock',
                        width: '3%'
                    },
                    FBAStockFNSKUUK: {
                        title: 'Stock/FNSKU',
                        width: '3%'
                    },
                    Status: {
                        title: 'Status',
                        width: '3%'
                    },
                    FBARecedQty: {
                        title: 'FBA Rec Qty',
                        width: '3%'
                    },
                    RequestQty: {
                        title: 'FBA Req Qty',
                        width: '3%'
                    },
                    LableStatus: {
                        title: 'Lable Status',
                        width: '3%'
                    },
                    RDate: {
                        title: 'Date',
                        width: '3%'
                    },
                    Comments: {
                        title: 'Note',
                        width: '3%'
                    },
                    LableLink: {
                        title: 'Link',
                        display: function (data) {
                            return String.format("<a class='btn btn-link btn-mini' href='{0}' target=\"_blank\">Link</a>", data.record.LableLink);
                        },
                        width: '2%'
                    },
                    ACCEPT: {
                        display: function (data) {
                            return String.format("<a class='btn btn-success btn-mini' onclick=\"UpdateAcceptProcesing({0})\">ACCEPT</a>", data.record.FBARequestID);
                        },
                        width: '2%'
                    },
                    REJECT: {
                        display: function (data) {
                            return String.format("<a class='btn btn-success btn-mini' onclick=\"UpdateRejectProcesing({0})\">REJECT</a>", data.record.FBARequestID);
                        },
                        width: '2%'
                    }
                }
            });
            $('#tblItems').jtable('load');
        }


        function UpdateAcceptProcesing(FBARequestID) {
            //debugger
            $.ajax({
                url: "/Item/UpdateProcesingByID",
                data: "fbaRequestID=" + FBARequestID + "&status=" + 'ACTIVE' + "&reason=" + '',
                @*url: '@Url.Action("UpdateProcesingByID/")' + FBARequestID,*@
                type: 'POST',
                success: function (result) {
                    $('#tblItems').jtable('load', { SellerIndex: $('#SellerIndex').val(), FBARootID: $('#FBARootID').val() });
                }
            });
        }

        function UpdateRejectProcesing(FBARequestID) {
            $("#FBARequestID").val(FBARequestID);
            $("#UpdateRejectProcesing").modal("show");
        }

        function ConfirmReject() {

            var FBARequestID = $("#FBARequestID").val();
            var reason = $("#reason").val();

            $.ajax({
                url: "/Item/UpdateProcesingByID",
                data: "fbaRequestID=" + FBARequestID + "&status=" + 'Reject' + "&reason=" + reason,
                type: 'POST',
                success: function (result) {
                    $('#tblItems').jtable('load', { SellerIndex: $('#SellerIndex').val(), FBARootID: $('#FBARootID').val() });
                    $('#tblItemsSummary').jtable('load');
                    $("#UpdateRejectProcesing").modal("hide");
                }
            });
        }

        function loadItemsSummary()
        {
            $('#tblItemsSummary').jtable({
                title: 'FBA Process Summary',
                useBootstrap: true,
                paging: true,
                sorting: true,
                actions: {
                    listAction:'@Url.Action("GetFbaPendingRequestSummary")'// + '?SellerIndex=' + $('#SellerIndex').val() + '&FBARootID=' + $('#FBARootID').val(),  //Get FBA Pending Request Report Procedure

                },
                fields: {
                    SellerID: {
                        title: 'Seller Name',
                        width: '3%'
                    },
                    FBARoot: {
                        title: 'FBA Root',
                        width: '2%'
                    },
                    PendingList: {
                        title: 'Total Pending List',
                        width: '3%'
                    },
                    MasterCartonQty: {
                        title: 'Total Box Qty',
                        width: '2%'
                    },
                    RequestQty: {
                        title: 'Total Item Qty ',
                        width: '2%'
                    }
                }
            });
            $('#tblItemsSummary').jtable('load');
        }

    </script>
