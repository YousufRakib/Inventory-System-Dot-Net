
@{
    ViewBag.Title = "Index - Stock Management";
    Layout = "~/Views/shared/_LoggedInLayout.cshtml";
}

@Html.Partial("_EditStock")
<style>
</style>

<div class="filtering">
    <form>
        <div class="input-append">
            <select id="filter">
                <option value="ItemName">ItemName</option>
                <option value="ItemCode">ItemCode</option>
                <option value="LowStock">LowStock</option>
                <option value="AvaliableStockGreater">Available Stock >=</option>
                <option value="AvaliableStockLesser">Available Stock <=</option>
                <option value="Supplier">Supplier</option>
            </select>
            <input class="span4" id="filterText" type="text">
            <button class="btn" id="LoadRecordsButton" type="button">Search</button>
            <button class="btn" id="Refresh" type="button">Clear Search</button>
        </div>
    </form>
</div>


<div id="tblItems"></div>

<script>

    $(document).ready(pageLoad);

    var returnObj = null;

    function pageLoad() {
        loadItems()
        SetupItemHistory()
    }

    function isDisabledAuto() {
        var source = $("#filter").val()

        return !(source == 'ItemName' || source == 'Supplier')
    }
    function LoadStockNumber() {
        var stock = {};
        stock.ItemMasterId = $("#ItemMasterId").val();
        stock.FBARootID = $("#FBARootID").val();
        stock.ItemCode = $("#ItemCode").val();
        if (stock.FBARootID != null) {
        //    console.log(stock.FBARootID);
        //console.log(stock);
        //stock.studentAddress = $("#StudentAddress").val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("getStockNumber")',
                data: '{searchClass: ' + JSON.stringify(stock) + '}',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //var stockQuantity = data;
                    $("#CurrentStock").val(data.StockQuantity);
                    $("#Cost").val(data.ItemCost);
                },
                error: function () {
                    alert("Error while inserting data");
                }
            });
        }
    }

    $("#filter").change(function () {
        $("#filterText").autocomplete({
            disabled: isDisabledAuto()
        })
    });

    //$("#FBARootID").on("click", function () {

    //});

    $("#filterText").autocomplete({
        disabled: false,
        source: function (request, response) {
            var source = $("#filter").val()
            var url=''

            if (source == 'ItemName') {
                url = '@Url.Action("LookupItem")'
            }
            else if (source == 'Supplier') {
                url = '@Url.Action("LookupSupplier")'
            }
            $.get(url, {
                searchText: request.term,
                onlyItemName:true
            }, function (data) {
                response(data);
            });
        },
        minLength: 1,
        change: function (event, ui) {

        },
        select: function (event, ui) {

        }
    });

    $('#Refresh').click(function (e) {
        e.preventDefault();
        $('#tblItems').jtable('load')
        $('#filterText').val('')
    });

    $('#LoadRecordsButton').click(function (e) {
        e.preventDefault();
        $('#tblItems').jtable('load', {
            filter: $('#filter').val(),
            filterText: $('#filterText').val()
        });
    });

    function loadItems() {
        $('#tblItems').jtable({
            title: 'Item Master - Stock Management',
            useBootstrap: true,
            paging: true,
            sorting: true,
            selecting: false,
            multiselect: false,
            selectingCheckboxes: true,
            actions: {
                listAction: '@Url.Action("GetItemsWithStock")',
            },
            recordsLoaded: function (event, data) {
                //console.log(data)
            },
            toolbar: {
                items: [
                    {
                        icon: '../../Content/images/add_icon.png',
                        text: '+Supplier Order',
                        click: function() {
                            $(location).attr("href", "@Url.Action("CreateOrder")")
                        }
                    }
                ]
            },
            fields: {
                ItemMasterID: {
                    key: true,
                    list: false
                },
                ItemName: {
                    title: 'Item Name',
                    width: '6%',
                    edit: true,
                },
                ItemCode: {
                    title: 'Item Code',
                    width: '7%',
                    input: function (data) {
                        if (data.record.ItemCode) {
                            return String.format("<input type='text' readonly class='jtable-input-readonly' name='ItemCode' value={0}></input>", data.record.ItemCode);
                        } else {
                            //nothing to worry about here for your situation, data.value is undefined so the else is for the create/add new record user interaction, create is false for your usage so this else is not needed but shown just so you know when it would be entered
                        }
                    },
                },
                ItemCost: {
                    title: 'Cost-UK',
                    edit: false,
                    width: '5%'
                },
                StockIn: {
                    title: 'UK-WH',
                    width: '2%',
                    listClass: 'stockin'
                },
                StockOut: {
                    title: 'UK-FBA Stock',
                    width: '2%',
                    listClass: 'stockout'
                },
                CurrentStock: {
                    title: 'UK-Total Stock',
                    width: '4%',
                    listClass :'currentstock'
                },
                ReOrderLevel: {
                    title: 'StockLevel',
                    listClass: 'stocklevel'
                },
                SupplierName: {
                    title: 'Supplier Name',
                    edit: false,
                    width: '7%'

                },
                Brand: {
                    title: 'Brand',
                    edit: false,
                    width: '3%'
                },

                VAT: {
                    title: 'VAT%',
                    edit: false,
                    width: '1%'
                },
                TotalCost: {
                    title: 'Total Cost',
                    edit: false,
                    width: '3%'
                },
                BarCode: {
                    title: 'BarCode',
                    edit: false,
                    width: '3%'
                },
                ActiveListings: {
                    title: '#Listings',
                    edit: false,
                    width: '1%'
                },
                FBARootID: {
                    edit: true,
                    list: false
                },
                Edit: {
                    display: function (data) {
                        var data = String.format("<a class='btn btn-success btn-mini' onclick='edit({0},{1},{2},{3})'>Add</a>",
                              data.record.ItemMasterID
                            , '"' + data.record.ItemName + '"'
                            , '"' + data.record.ItemCode + '"'
                            , data.record.CurrentStock);

                        return data
                    },
                    edit: false,
                    width: '2%'
                },
                History: {
                    display: function (data) {
                        var data = String.format("<a class='btn btn-success btn-mini' onclick='showHistory({0},{1})'>History</a>",
                              data.record.ItemMasterID
                             , '"' + data.record.ItemName + '"');

                        return data
                    },
                    edit: false,
                    width: '2%'
                }
            }
        });

        $('#tblItems').jtable('load');
    }

    function SetupItemHistory() {
        $('#itemHistoryTable').jtable({
            title: 'Item History',
            useBootstrap: true,
            paging: true,
            pageSizes :[6,12,18,24,30,500],
            pageList: 'minimal',
            actions: {
                listAction: '@Url.Action("GetStockHistory")'
            },
            fields: {

                StockIn: {
                    title: 'UK-WH ',
                    width: '5%',
                    listClass: 'align-center',
                    display: function (data) {
                        if (data.record.StockIn > 0) {
                            return String.format("<b style=\"color:green\">{0}</b>", data.record.StockIn)
                        }
                        else {
                            return String.format("")
                        }
                    },
                },
                StockOut: {
                    title: 'FBA-STOCK',
                    display: function (data) {
                        if (data.record.StockOut > 0) {
                            return String.format("<b style=\"color:red\">{0}</b>", data.record.StockOut)
                        }
                        else {
                            return String.format("")
                        }
                    },
                    width: '10%',
                    listClass: 'align-center'
                },
                Source: {
                    title: 'TOTAL-STOCK',
                    width: '20%',
                    listClass: 'source-class'

                },
                CreatedDateString: {
                    title: 'CREATE DATE',
                    width: '15%',
                    displayFormat: 'yy-mm-dd'
                },
                EUStockIn: {
                    title: 'EU-WH ',
                    width: '5%',
                    listClass: 'align-center',
                    display: function (data) {
                        if (data.record.StockIn > 0) {
                            return String.format("<b style=\"color:green\">{0}</b>", data.record.StockIn)
                        }
                        else {
                            return String.format("")
                        }
                    },
                },
                EUStockOut: {
                    title: 'EU-FBA-STOCK',
                    display: function (data) {
                        if (data.record.StockOut > 0) {
                            return String.format("<b style=\"color:red\">{0}</b>", data.record.StockOut)
                        }
                        else {
                            return String.format("")
                        }
                    },
                    width: '10%',
                    listClass: 'align-center'
                },
                EUSource: {
                    title: 'TOTAL-STOCK',
                    width: '20%',
                    listClass: 'source-class'

                },
                DateString: {
                    title: 'CREATE DATE',
                    width: '15%',
                    displayFormat: 'yy-mm-dd'
                },

            },
            toolbar: {

            }
        });
    }

    function showHistory(ItemMasterId,ItemName) {
        $('#itemNameHistory').text(ItemName)
        $('#itemHistoryTable').jtable('load', { id: ItemMasterId });
        $('#modalStockHistory').modal('show');
    }

    function edit(ItemMasterId, ItemName, ItemCode, StockUnits) {
        clearForm()
        $('#ItemMasterId').val(ItemMasterId)
        $('#ItemNameText').val(ItemName)
        $('#ItemCode').val(ItemCode)
        $('#CurrentStock').val(StockUnits)
        $('#FBARootID').val(FBARootID)
        $('#modalStockAdd').modal('show');
    }


    function clearForm() {
        $('#ItemMasterId').val(0)
        $('#ItemNameText').val('')
        $('#ItemCode').val('')
        $('#InSource').val('');
        $('.combobox').val('');
        $('#OutSource').val('');
        $('#quantity').val('');
        $('#notes').val('');
        $('#CurrentStock').val('')
    }

</script>
