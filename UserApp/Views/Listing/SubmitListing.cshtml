@model Infrastrucutre.Core.Models.ListingSubmission

@{
    ViewBag.Title = "Listing Submission";
    Layout = "~/Views/shared/_LoggedInLayout.cshtml";
}

@using (Html.BeginForm("AddListingSubmission", "Listing", FormMethod.Post))
{
    if (ViewBag.Mode == "Create")
    {
        @Html.Hidden("ListingSubmissionID", "0")
    }
    else
    {
        @Html.HiddenFor(m => m.ListingSubmissionID)    
        @Html.HiddenFor(m => m.ListingRequestID)    
    }
    
    <fieldset>
        <legend>@ViewBag.HeaderText</legend>
        <div class="row-fluid">
            <div class="span4 control-group">
                @if (ViewBag.Mode == "Create")
                {
                @Html.LabelFor(model => model.ListingRequestID,"RequestNo", new { @class = "control-label" })
                <select class="combo-style combobox input-sm" data-val="true" required="required" data-val-required="Item is required" id="ListingRequestID" name="ListingRequestID" onchange="javascript:OnItemSelected(this.value)">
                    <option value="">Choose Listing Request</option>
                    @foreach (var item in (ViewBag.ListingRequestID as System.Web.Mvc.SelectList).Items as List<Infrastrucutre.Core.Models.ListingRequestFilter>)
                    {
                        if (ViewBag.ListingRequestID.SelectedValue == item.RequestID)
                        {
                        <option value="@item.RequestID" selected="selected">@item.ListingRequestNo</option>
                        }
                        else
                        {
                        <option value="@item.RequestID">@item.ListingRequestNo</option>
                        }
                    }
                </select>
                }
                else
                {
                    @Html.Label("lblRequestNo", "RequestNo", new { @class = "control-label" })
                    @Html.TextBox("txtRequestNo", "", new { @class = "span12", @readonly = "readonly" })
                }
            </div>
            
            <div class="span4 control-group">
                @Html.Label("lblItemCode", "ItemCode", new { @class = "control-label" })
                @Html.TextBox("txtItemCode", "", new { @class = "span12", @readonly = "readonly" })
            </div>
            <div class="span4 control-group">
                @Html.Label("lblItemName", "ItemName", new { @class = "control-label" })
                @Html.TextBox("txtItemName", "", new { @class = "span12", @readonly = "readonly" })
            </div>
        </div>
        <div class="row-fluid">
            <div class="span12 control-group">
                @Html.Label("lblListingDescription", "ListingDescription", new { @class = "control-label" })
                @Html.TextBox("txtListingDescription", "", new { @class = "span12", @readonly = "readonly" })
            </div>
        </div>
        <div class="row-fluid">
            <div class="span12 control-group">
                @Html.Label("lblSpecialInstructions", "SpecialInstructions", new { @class = "control-label" })
                @Html.TextBox("txtSpecialInstructions", "", new { @class = "span12", @readonly = "readonly" })
            </div>
        </div>


        <div class="row-fluid">
            <div class="span4 control-group">
                @Html.Label("lblDimension", "Dimension", new { @class = "control-label" })
                @Html.TextBox("txtDimension", "", new { @class = "span12", @readonly = "readonly" })
            </div>           
            <div class="span4 control-group">
                @Html.Label("lblBrandName", "Brand Name", new { @class = "control-label" })
                @Html.TextBox("txtBrandName", "", new { @class = "span12", @readonly = "readonly" })
            </div>
             <div class="span4 control-group">
                @Html.Label("TotalCost", "TotalCost", new { @class = "control-label" })
                @Html.TextBox("txtTotalCost", "", new { @class = "span12", @readonly = "readonly" })
            </div>
        </div>

        <div class="row-fluid">
            <div class="span4 control-group">
                @Html.Label("lblItemCode", "EBayPrice", new { @class = "control-label" })
                @Html.TextBox("txtEBayPrice", "", new { @class = "span12", @readonly = "readonly" })
            </div>
            <div class="span4 control-group">
                @Html.Label("lblItemName", "AmazonPrice", new { @class = "control-label" })
                @Html.TextBox("txtAmazonPrice", "", new { @class = "span12", @readonly = "readonly" })
            </div>
            <div class="span4 control-group">
                @Html.LabelFor(model => model.ListingChannelID,"ListingChannel", new { @class = "control-label" })
                <select class="combo-style combobox input-sm" data-val="true" required="required" data-val-required="Item is required" id="ListingChannelID" name="ListingChannelID">
                    <option value="">Choose Listing Channel</option>
                    @foreach (var item in (ViewBag.ListingChannelID as System.Web.Mvc.SelectList).Items as List<Infrastrucutre.Core.Models.ListingChannel>)
                    {
                        if (ViewBag.ListingChannelID.SelectedValue == item.ListingChannelID)
                        {
                        <option value="@item.ListingChannelID" selected="selected">@item.ListingChannelName</option>
                        }
                        else
                        {
                        <option value="@item.ListingChannelID">@item.ListingChannelName</option>
                        }
                    }
                </select>
            </div>           
        </div>



        <div class="row-fluid">
            <div class="span4 control-group">
                @Html.LabelFor(model => model.ItemMiniTitle, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.ItemMiniTitle, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.ItemMiniTitle)
            </div>
             <div class="span4 control-group">
                @Html.LabelFor(model => model.ListingItemPrice , new { @class = "control-label" })
                @Html.TextBoxFor(model => model.ListingItemPrice, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.ListingItemPrice)
            </div>
             <div class="span4 control-group">
                @Html.LabelFor(model => model.ListingStatus , new { @class = "control-label" })
                <select class="combo-style combobox input-sm" data-val="true" required="required" data-val-required="Item is required" id="ListingStatus" name="ListingStatus">
                    <option value="">Choose Listing Request</option>
                    @foreach (var item in (ViewBag.ListingStatus as System.Web.Mvc.SelectList).Items as List<Infrastrucutre.Core.Models.ListingStatus>)
                    {
                        if (ViewBag.ListingStatus.SelectedValue == item.StatusCode)
                        {
                        <option value="@item.StatusCode" selected="selected">@item.StatusDescription</option>
                        }
                        else
                        {
                        <option value="@item.StatusCode">@item.StatusDescription</option>
                        }
                    }
                </select>


            </div>
        </div>

        <div class="row-fluid">
            <div class="span4 control-group">
                @Html.LabelFor(model => model.ListingItemNo,"Item ASIN/Item No" , new { @class = "control-label" })
                @Html.TextBoxFor(model => model.ListingItemNo, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.ListingItemNo)
            </div>
            <div class="span8 control-group">
                @Html.LabelFor(model => model.ListingLink , new { @class = "control-label" })
                @Html.TextBoxFor(model => model.ListingLink, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.ListingLink)
            </div>
        </div>

        <div class="text-center widget-footer">
            @Html.ActionLink("Back to List", "ListingSubmissions", null, new { @class = "btn" })
            @if (ViewBag.Mode == "Create")
            {
                <button type="submit" class="btn btn-success" name="command" value="Save">Save</button>   
            }
            else
            {
                <button type="submit" class="btn btn-success" name="command" value="Update">Update</button>     
            }

        </div>
    </fieldset>
}

<div>
</div>

<script>
    $('.combobox').combobox();
    $('.combobox-container input').css("width", "88%");

    $(document).ready(function () {

        var sumbmissionID = $('#ListingSubmissionID').val();

        if (sumbmissionID > 0) {
            var listingRequestID = $('#ListingRequestID').val();
            OnItemSelected(listingRequestID);
        }


    });


    //{"ItemMasterID":6,"ItemName":"nono","ItemCode":"as","Description":"asdf","Brand":"asd","Dimension":"ads","ItemWeight":"asd","VAT":2,"ItemCost":324,"TotalCost":330.48,"BarCode":"234","SupplierID":4,"SupplierName":null,"ItemCategoryID":2,"ItemManufacturerID":2,"ItemColorID":2,"LocationID":1}
    function OnItemSelected(selectedItemID) {

        if (selectedItemID == '') {
            clearItems();
            return;
        }

        $.ajax({
            url: '@Url.Action("GetJSONListingRequestByID/")' + selectedItemID,
            type: 'POST',
            success: onSuccessEditItem
        });
    }

    function clearItems() {

        $('#txtDimension').val('')
        $('#txtBrandName').val('')
        $('#txtCategoryName').val('')
        $('#txtTotalCost').val('')
        $('#txtItemCode').val('')
        $('#txtItemName').val('')
        $('#txtListingDescription').val('')
        $('#txtSpecialInstructions').val('')
        $('#txtEBayPrice').val('')
        $('#txtAmazonPrice').val('')

    }

    function onSuccessEditItem(result) {
        $('#txtDimension').val(result.Item.Dimension)
        $('#txtBrandName').val(result.Item.Brand)
        $('#txtCategoryName').val(result.Item.CategoryName)
        $('#txtTotalCost').val(result.Item.TotalCost)
        $('#txtItemCode').val(result.Item.ItemCode)
        $('#txtItemName').val(result.Item.ItemName)        
        $('#txtListingDescription').val(result.ListingDescription)
        $('#txtSpecialInstructions').val(result.SpecialInstructions)
        $('#txtEBayPrice').val(result.EBayPrice)
        $('#txtAmazonPrice').val(result.AmazonPrice)

        if ($('#ListingSubmissionID').val() > 0) {
            $('#txtRequestNo').val(result.ListingRequestNo)
        }

        //txtListingDescription
        //txtSpecialInstructions

    }




    @*    function fileUploadJTable() {
        debugger
        $('#uploadJtable').jtable({
            title: 'Item Images',
            actions: {
                listAction: '@Url.Action("GetItemImages/")@Model.RequestID'
            },
            fields: {
                FileID: {
                    key: true,
                    list: false
                },
                FileName: {
                    title: 'FileName',
                    width: '20%'
                },

                Edit: {

                    display: function (data) {
                        return String.format("<a href='@Url.Action("../Content/Upload/"){0}' class=\"btn btn-success btn-small\"  target=\"_blank\" >Download</a>", data.record.FileName);
                    },
                    width: '1%'
                },
                Delete: {
                    display:

                        function (data) {

                            return String.format("<a onclick=\"DelUploadDoc({0})\" class=\"btn btn-success btn-small\" >Delete</a>", data.record.FileID);

                        },
                    width: '4%'

                }
            },
            toolbar: {
                items: [{
                    icon: '../../Content/images/add.png',
                    text: 'Upload File',
                    click: showUploadModal
                }]
            }


        });
        $('#uploadJtable').jtable('load');


    }*@
</script>
