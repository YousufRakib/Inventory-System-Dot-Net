@{
    ViewBag.Title = "CreateShipment";
    Layout = "~/Views/shared/_LoggedInLayout.cshtml";
}

@using AkraTechFramework.Helpers

<div class="row-fluid">
    <div class="span12 control-group">
        <h2 style="text-align:center;color: green;">Create Shipment</h2>
    </div>
</div>

<div class="row-fluid" style="margin-left:2%;">
    <input id="userName" type="hidden" value="@ViewBag.UserName" />
    <form>
        <div class="span2 control-group" style="margin-left: 0.5%; margin-right: 0%">
            <label class="control-label">W.Root</label>
            <div class="span12 control-group" style="margin-left: 0%;">
                <select class="control-label chosen" , Style="width:100%" data-val="true" id="FBARootID" name="FBARootID">
                    @foreach (var item in (ViewBag.FBARoot as System.Web.Mvc.SelectList).Items as List<Infrastrucutre.Core.Models.FBALocations>)
                    {
                        if (ViewBag.FBARoot.SelectedValue == item.FBARootID)
                        {
                            <option value="@item.FBARootID" selected="selected">@item.FBARoot</option>
                        }
                        else
                        {
                            <option value="@item.FBARootID">@item.FBARoot</option>
                        }
                    }
                </select>
            </div>
        </div>

        @*<div class="span2 control-group" style="margin-left:0.5%">
            <label class="control-label">Select Supplier</label>
            <select class="control-label chosen" , style="width:118%;" data-val="true" id="SupplierName" name="SupplierName">
                @foreach (var item in (ViewBag.Suppliers as System.Web.Mvc.SelectList).Items as List<Infrastrucutre.Core.Models.Models.ForecastingItemSummary>)
                {
                    <option value="@item.SupplierName ">@item.SupplierName</option>
                }
            </select>
        </div>*@

        <button style="margin-left:1%; margin-top:1.3%;width:5%;" class="btn" id="LoadRecordsButton" type="button">Search</button>
    </form>

</div>

<div id="tblCreateShipmentView"></div>

<br />
<hr />
<hr />
<br />

<div class="row-fluid" style="margin-left:2%;width:96.5%">
    <div class="span2 control-group">
        <button style="margin-left: 0%; width: 100%; margin-top: 0%; margin-bottom:5%; font-weight: bold;" class="btn" id="proceedForecasting" onclick="proceedForecasting()" type="button">Proceed</button>
    </div>

    <div class="span2 control-group" style="margin-left: 2.5%; margin-top: -1.5%;">
        @Html.Label("shipmentOrderId", "Shipment OrderId", new { @class = "control-label", @style = "margin-top: 0%;" })
        @Html.TextBox("shipmentOrderId", "", new { @class = "span12", @Value = @ViewBag.ShipmentOrderId, @readonly = "readonly", @style = "width:101%" })
    </div>
</div>

<div class="row-fluid" style="margin-left:2%;width:97%">
    <div class="span2 control-group">
        @Html.Label("warehouseRoot", "Warehouse Root", new { @class = "control-label", })
        @Html.TextBox("warehouseRoot", "", new { @class = "span12", @style = "width:100%", @readonly = "readonly" })
    </div>
    <div class="span2 control-group">
        @Html.Label("shippingId", "Shipping Id", new { @class = "control-label", })
        @Html.TextBox("shippingId", "", new { @class = "span12", @style = "width:100%" })
    </div>
    <div class="span2 control-group">
        @Html.Label("shipmentTitle", "Shipment Title", new { @class = "control-label", @style = "margin-top: 0%;" })
        @Html.TextBox("shipmentTitle", "", new { @class = "span12", @style = "width:100%" })
    </div>
    <div class="span2 control-group">
        @Html.Label("currency", "Currency", new { @class = "control-label", @style = "margin-top: 0%;" })
        @Html.TextBox("currency", "", new { @class = "span12", @style = "width:100%" })
    </div>
    <div class="span2 control-group">
        @Html.Label("totalValue", "Total Value Goods", new { @class = "control-label", @style = "margin-top: 0%;" })
        @Html.TextBox("totalValue", "", new { @class = "span12", @style = "width:100%", @readonly = "readonly", @Value = "0" })
    </div>
    <div class="span2 control-group">
        @Html.Label("totalVolume", "Shipment Volume", new { @class = "control-label", @style = "margin-top: 0%;" })
        @Html.TextBox("totalVolume", "", new { @class = "span12", @style = "width:100%", @readonly = "readonly", @Value = "0" })
    </div>
</div>

<div class="row-fluid" style="margin-left:2%;width:97%">
    <div class="span2 control-group">
        @Html.Label("shippingAgent", "Shipping Agent", new { @class = "control-label", @style = "margin-top: 0%;" })
        @Html.TextBox("shippingAgent", "", new { @class = "span12", @style = "width:100%" })
    </div>
    <div class="span2 control-group">
        @Html.Label("clearingAgent", "Clearing Agent", new { @class = "control-label", @style = "margin-top: 0%;" })
        @Html.TextBox("clearingAgent", "", new { @class = "span12", @style = "width:100%" })
    </div>
    <div class="span2 control-group">
        @Html.Label("caseWorker", "Case Worker", new { @class = "control-label", @style = "margin-top: 0%;" })
        @Html.TextBox("caseWorker", "", new { @class = "span12", @style = "width:100%" })
        @*@Html.Label("bookingAgent", "Booking Agent", new { @class = "control-label", @style = "margin-top: 0%;" })
        @Html.TextBox("bookingAgent", "", new { @class = "span12", @style = "width:100%" })*@
    </div>
    <div class="span2 control-group">
        @Html.Label("freightCharges", "Freight Charges", new { @class = "control-label", })
        @Html.TextBox("freightCharges", "", new { @class = "span12", @style = "width:100%", @Value = "0" })
    </div>
    <div class="span2 control-group">
        @Html.Label("portOfLoading", "Port of Loading", new { @class = "control-label", })
        @Html.TextBox("portOfLoading", "", new { @class = "span12", @style = "width:100%" })
    </div>
    <div class="span2 control-group">
        @Html.Label("portOfArrival", "Port of Arrival", new { @class = "control-label", })
        @Html.TextBox("portOfArrival", "", new { @class = "span12", @style = "width:100%"})
    </div>
</div>

<div class="row-fluid" style="margin-left:2%;width:97%">
    <div class="span2 control-group">
        <label class="control-label">Final ETD</label>
        @Html.TextBox("etdDate", DateTime.Now.ToShortDateString(), new
        {
            @class = "span12 datepicker",
            @readonly = "readonly",
            @style = "cursor:pointer; background-color:white;width:100%",
            @placeholder = "Select Date"
        })
    </div>
    <div class="span2 control-group">
        <label class="control-label">Final ETA</label>
        @Html.TextBox("etaDate", DateTime.Now.ToShortDateString(), new
        {
            @class = "span12 datepicker",
            @readonly = "readonly",
            @style = "cursor:pointer; background-color:white;width:100%",
            @placeholder = "Select Date"
        })
    </div>
    <div class="span2 control-group">
        @Html.Label("counterSize", "Counter Size", new { @class = "control-label", @style = "margin-top: 0%;" })
        @Html.TextBox("counterSize", "", new { @class = "span12", @style = "width:100%" })
    </div>
    <div class="span2 control-group">
        @Html.Label("depositAmount", "Deposit Amount", new { @class = "control-label", @style = "margin-top: 0%;" })
        @Html.TextBox("depositAmount", "", new { @class = "span12", @style = "width:100%", @Value = "0", @readonly = "readonly" })
    </div>
    <div class="span2 control-group">
        @Html.Label("paidDeposit", "Remaining Balance", new { @class = "control-label", @style = "margin-top: 0%;" })
        @Html.TextBox("paidDeposit", "", new { @class = "span12", @style = "width:100%", @Value = "0", @readonly = "readonly" })
    </div>
    <div class="span2 control-group">
        @Html.Label("comment", "Comment", new { @class = "control-label", @style = "margin-top: 0%;" })
        @Html.TextBox("comment", "", new { @class = "span12", @style = "width:100%" })
    </div>
</div>

<div class="row-fluid" style="margin-left:2%;width:97%">
    <div class="span2 control-group">
        <button style="margin-left: 0%; width: 100%; margin-top: 9%; margin-bottom:5%; font-weight: bold;" class="btn" id="submit" onclick="SaveData()" type="button">Submit</button>
    </div>
</div>

<script>

    $(document).ready(pageLoad);

    function pageLoad() {
        loadItemForecasting()

        $(".datepicker").datepicker();
        $(".datepicker").datepicker("option", "dateFormat", "d M, y");
    }

    const months = [
        'Jan',
        'Feb',
        'Mar',
        'Apr',
        'May',
        'Jun',
        'Jul',
        'Aug',
        'Sep',
        'Oct',
        'Nov',
        'Dec'
    ]

    $('#LoadRecordsButton').click(function (e) {
        e.preventDefault();
        $('#tblCreateShipmentView').jtable('load', {
            warehouseRoot: $("#FBARootID option:selected").text()
        });
    });

    function proceedForecasting() {
        var totalValue = 0;
        var totalVolume = 0;
        var depositAmount = 0;
        var remainingBalance = 0;
        var portOfLoading = '';
        var portOfArrival = '';
        var etdDate = '';
        var count = 0;
        var warehouseRoot = "";
        var isProceed = 1;

        var $selectedRows = $('#tblCreateShipmentView').jtable('selectedRows');
        if ($selectedRows.length > 0)
        {
            $selectedRows.each(function (row, tr) {
                count = count + 1;
                var record = $(this).data('record');

                if (count > 1) {
                    if (warehouseRoot.toUpperCase() == record.WarehouseRoot.toUpperCase()) {
                        totalValue += record.TotalValue;
                        totalVolume += record.TotalCVM;
                        depositAmount += record.DepositAmount;
                        remainingBalance += record.RemainingBalance;
                        portOfLoading = record.PortOfLoading;
                        portOfArrival = record.PortOfArrival;
                        etdDate = record.ETDDateString;
                        warehouseRoot = record.WarehouseRoot
                    }
                    else {
                        isProceed = 0;
                        return false;
                    }
                }
                else {
                    totalValue += record.TotalValue;
                    totalVolume += record.TotalCVM;
                    depositAmount += record.DepositAmount;
                    remainingBalance += record.RemainingBalance;
                    portOfLoading = record.PortOfLoading;
                    portOfArrival = record.PortOfArrival;
                    etdDate = record.ETDDateString;
                    warehouseRoot = record.WarehouseRoot
                }
            });
        }
        else {
            alert('You have to select atlist 1 row from the list!!');
        }

        if (isProceed == 0) {
            alert('Kindly make sure WarehouseRoot are same in your selected list!!');
        }
        else {
            $("#portOfLoading").val(portOfLoading);
            $("#portOfArrival").val(portOfArrival);
            $("#totalValue").val(totalValue);
            $("#totalVolume").val(totalVolume);
            $("#depositAmount").val(depositAmount);
            $("#paidDeposit").val(remainingBalance);
            $("#etdDate").val(etdDate);
            $("#warehouseRoot").val(warehouseRoot);
        }
    }

    function loadItemForecasting() {
        $('#tblCreateShipmentView').jtable({
            title: 'Suppliers Pending Order List',
            useBootstrap: true,
            paging: true,
            sorting: true,
            selecting: true,
            multiselect: true,
            selectingCheckboxes: true,

            scrollable: true,
            actions: {
                listAction: '@Url.Action("GetSupplierOrderListWithWarehouseRoot")',
            },

            recordsLoaded: function (event, data) {
            },
            toolbar: {
            },

            fields: {
                Id: {
                    key: true,
                    list: false
                },
                SupplierOrderId: {
                    title: 'SupplierOrder Id',
                    width: '4%'
                },
                SupplierName: {
                    title: 'Supplier Name',
                    width: '5%'
                },
                Currency: {
                    title: 'Currency',
                    width: '3%'
                },
                TotalValue: {
                    title: 'Total PI Value',
                    width: '5%'
                },
                DepositPercentage: {
                    title: 'Deposit Percentage',
                    width: '6%'
                },
                DepositAmount: {
                    title: 'Deposit Amount',
                    width: '5%'
                },
                DepositDateString: {
                    title: 'Deposit Date',
                    width: '4%'
                },
                RemainingBalance: {
                    title: 'Remaining Balance',
                    width: '6%'
                },
                LeadTime: {
                    title: 'LeadTime',
                    width: '3%'
                },
                ETDDateString: {
                    title: 'ETD Date',
                    width: '4%'
                },
                CutOfDateString: {
                    title: 'Cut Off Date',
                    width: '4%'
                },
                TotalCVM: {
                    title: 'Volume (CBM)',
                    width: '5%'
                },
                PortOfLoading: {
                    title: 'Port Of Loading',
                    width: '5%'
                },
                PortOfArrival: {
                    title: 'Port Of Arrival',
                    width: '5%'
                },
                WarehouseRoot: {
                    title: 'Warehouse Root',
                    width: '5%'
                }
            },
        });
        $('#tblCreateShipmentView').jtable('load');
    }

    function SaveData() {

        const etdDate = `${new Date($('#etdDate').val()).getDate()} ${months[new Date($('#etdDate').val()).getMonth()]}, ${new Date($('#etdDate').val()).getFullYear()}`;
        const etaDate = `${new Date($('#etaDate').val()).getDate()} ${months[new Date($('#etaDate').val()).getMonth()]}, ${new Date($('#etaDate').val()).getFullYear()}`;

        var createShipmentList = [];

        var createShipmentSummary = {
            ShipmentOrderId: $('#shipmentOrderId').val(),
            ShipmentId: $('#shippingId').val(),
            WarehouseRoot: $('#warehouseRoot').val(),
            ShipmentTitle: $('#shipmentTitle').val(),
            PortOfLoading: $('#portOfLoading').val(),
            PortOfArrival: $("#portOfArrival").val(),
            Currency: $('#currency').val(),
            TotalValue: $('#totalValue').val(),
            PaidDeposit: $('#paidDeposit').val(),
            DepositAmount: $('#depositAmount').val(),
            ContainerSize: $('#counterSize').val(),
            TotalCVM: $('#totalVolume').val(),
            ETDDate: etdDate, 
            ETADate: etaDate,
            Comment: comment,
            CaseWorker: $('#caseWorker').val(),
            ShippingAgent: $('#shippingAgent').val(),
            ClearingAgent: $('#clearingAgent').val(),
            /*BookingAgent: $('#bookingAgent').val(),*/
            FreightCharges: $("#freightCharges").val(),
            IsActive: true,
            CreatedBy: $('#userName').val(),
            CreatedDate: new Date()
        };

        var $selectedRows = $('#tblCreateShipmentView').jtable('selectedRows');
        if ($selectedRows.length > 0) {
            $selectedRows.each(function (row, tr) {
                var record = $(this).data('record');
                var createShipment = {
                    SupplierOrderId: record.SupplierOrderId,
                    ShipmentOrderId: $('#shipmentOrderId').val(),
                    SupplierName: record.SupplierName,
                    Currency: record.Currency,
                    TotalValue: record.TotalValue,
                    DepositPercentage: record.DepositPercentage,
                    DepositAmount: record.DepositAmount,
                    DepositDate: record.DepositDateString,
                    RemainingBalance: record.RemainingBalance,
                    LeadTime: record.LeadTime,
                    ETDDate: record.ETDDateString,
                    CutOffDate: record.CutOffDateString,
                    TotalCVM: record.TotalCVM,
                    PortOfLoading: record.PortOfLoading,
                    PortOfArrival: record.PortOfArrival,
                    WarehouseRoot: record.WarehouseRoot,
                    IsActive: true,
                    CreatedBy: $('#userName').val(),
                    CreatedDate: new Date()
                };
                createShipmentList.push(createShipment);
            });
        }
        else {
            alert('You have to select atlist 1 row from the list!!');
        }

        var createShipmentModel = {
            CreateShipmentSummary: createShipmentSummary,
            CreateShipments: createShipmentList
        };

        var createShipmentDataModel = JSON.stringify(createShipmentModel);

        var data = new FormData();

        data.append("CreateShipmentDataModel", createShipmentDataModel);

        var actionurl = "@Url.Action("SaveCreateShipment", "Forecasting")";

        //Loading(true);

        $.ajax({
            type: "POST",
            url: actionurl,
            data: data,
            processData: false,
            contentType: false,
            async: false,
            success: function (data) {
                //debugger;
                //Loading(false);
                if (data.output === "success") {
                    alert("Data saved successfully!!");
                    //swal("Success", "Data Saved Successfully!!", "success");
                    //swal("Data Saved Successfully!!");
                    window.location.href = '/Forecasting/CreateShipmentList';
                    //return false;
                } else {
                    alert("Something went wrong!!");
                    //return false;
                }
            }
        });
    }
</script>
